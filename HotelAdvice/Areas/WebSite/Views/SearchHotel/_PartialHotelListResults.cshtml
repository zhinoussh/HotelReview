@using PagedList;
@using PagedList.Mvc;
@model IPagedList<HotelAdvice.Areas.WebSite.ViewModels.HotelSearchViewModel>


        @for (int i=0; i < Model.Count; i++)
        {
            <div class="col-xs-12 nopadding">

                <div class="well well-result">

                    <div class="col-xs-3 nopadding" >
                        @Html.ImageLink("HotelDetails", "SearchHotel", String.Concat("/Upload/", @Model[i].HotelName, "/main.jpg")
                        , "img_result img-responsive", new { id = @Model[i].HotelId })
                    </div>
                    <div class="col-xs-9 nopadding">
                        <div class="col-xs-12 nopadding">
                            <div class="col-xs-6">
                                <h4 style=" margin:0;">
                                    @Html.ActionLink(Model[i].HotelName, "HotelDetails", "SearchHotel"
                                , new { Area = "WebSite", id = Model[i].HotelId }, new { target = "_blank" })
                                </h4>
                                @Html.DisplayName(Model[i].CityName)
                                @Html.TextBox("txt_star_hotel", Model[i].HotelStars, new { @class = "HotelStars" })
                            </div>
                            <div class="col-xs-2 col-xs-offset-4 nopadding">

                                @using (Ajax.BeginForm("AddToFavorite", "User"
                                    , new
                                    {
                                        hotel_id = Model[i].HotelId,
                                        sort = Request["sort"],
                                        page = Request["page"],
                                        cityId = Request["cityId"],
                                        citySearch = Request["citySearch"],
                                        destination_name = Request["destination_name"],
                                        score = Request["score"],
                                        HotelName = Request["HotelName"],
                                        center = Request["center"],
                                        airport = Request["airport"],
                                        Star1 = Request["Star1"],
                                        Star2 = Request["Star2"],
                                        Star3 = Request["Star3"],
                                        Star4 = Request["Star4"],
                                        Star5 = Request["Star5"],
                                        amenity = Request["amenity"]
                                    }
                                    , new AjaxOptions
                                {
                                    HttpMethod = "Post",
                                    OnSuccess = "SuccessAjax_AddFavorit"

                                }))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.BootstrapButton("<i class='fa fa-heart fa-lg hidden-xs'></i> Like it!"
                                         , String.Concat("btn-danger btn-responsive ", !Model[i].is_favorite ? "btn-outline" : "")
                                         , "", HtmlCommon.ButtonType.submit, Model[i].is_favorite ? "Remove from your wish list" : "Add to your wish list")
                                }

                            </div>

                        </div>
                        <div class="col-xs-12">
                            visit website <i class="glyphicon glyphicon-hand-right"></i>
                            <a href="http://@Model[i].Website" target="_blank">@Model[i].Website</a>
                        </div>
                        <div class="col-xs-12 top-buffer10 text-justify HotelDescriotion">
                            @Model[i].Description
                        </div>
                        <div class="col-xs-12 nopadding top-buffer10">
                            <div class="col-xs-2" >
                                @Html.TextBox("txt_rate_hotel", Model[i].GuestRating, new { @class = "GuestRating" })
                            </div>
                            <div class="col-xs-2">
                                @Html.ActionLink(Model[i].num_reviews + " reviews", "Reviews", "User"
                                , new { Area = "WebSite", id = Model[i].HotelId }, new { target = "_blank" })
                            </div>
                            <div class="col-xs-2 col-xs-offset-6 nopadding" >
                                <a role="button" class="btn btn-primary btn-responsive"
                                   href="@Url.Action("Reviews", "User", new { id = Model[i].HotelId, Area = "WebSite" })">
                                    Review <i class="glyphicon glyphicon-pencil hidden-xs"></i>
                                </a>
                            </div>
                        </div>

                        

                   </div>
                </div>
            </div>
         }



            @if (Model!=null && Model.PageCount > 1)
            {

                <div class="col-xs-12 text-center">
                    @Html.PagedListPager(Model, page => Url.Action("HotelResults","SearchHotel"
             , new RouteValueDictionary(){ 
             {"page", page}, {"sort" ,Request["sort"] },{"citySearch", Request["citySearch"]},
             {"destination_name" , Request["destination_name"]},{"cityId",Request["cityId"]},{"HotelName",Request["HotelName"]}
             ,{"center",Request["center"]}, {"airport" ,Request["airport"] },{"Star1",Request["Star1"]},{"Star2",Request["Star2"]}
             ,{"Star3",Request["Star3"]},{"Star4",Request["Star4"]},{"Star5",Request["Star5"]},{"amenity",Request["amenity"]}
             })
               , PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                new PagedListRenderOptions
                {
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                    LinkToFirstPageFormat = "First",
                    LinkToLastPageFormat = "Last",
                    MaximumPageNumbersToDisplay = 3,
                    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                    EllipsesFormat = "&#8230;"
                },
                new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "table_container",
                    InsertionMode = InsertionMode.Replace,
                    OnSuccess = "Success_paging_Results"
                }))
                </div>

            }






