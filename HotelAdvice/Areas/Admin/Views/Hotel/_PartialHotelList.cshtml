@using PagedList
@using PagedList.Mvc
@model IPagedList<HotelAdvice.Areas.Admin.ViewModels.HotelViewModel>


@if (Model.Count > 0)
{
    <div class="panel panel-default" > 
        <table id="mytable" class="table table-bordred table-striped table-hover sortable">

            <thead class="thead-default">
                <tr>
                    <th class="hidden">Hotel ID</th>
                    <th class="text-center">#</th>
                    <th class="text-center">Hotel Name</th>
                    <th class="text-center">City</th>
                    <th class="text-center">Star Rating</th>
                    <th class="text-center" data-defaultsort="disabled">Actions</th>
                </tr>
            </thead>
            <tbody>


            @foreach (var item in Model)
            {
                    <tr>
                        <td class="hidden">@item.HotelId</td>
                        <td class="col-sm-1 text-center">@item.RowNum</td>
                        <td class="col-sm-4 text-center" data-defaultsign="AZ">@item.HotelName</td>
                        <td class="col-sm-3 text-center" data-defaultsign="AZ">@item.CityName</td>
                        <td class="col-sm-3 text-center" data-defaultsign="_19">@item.HotelStars</td>
                        <td>
                            <a data-toggle="tooltip" data-url="/Admin/Hotel/ADD_New_Hotel/@item.HotelId?page=@Request.QueryString["page"]&filter=@Request.QueryString["filter"]" title="Edit" class="glyphicon glyphicon-edit editButton"></a>
                            <a data-toggle="tooltip" data-url="/Admin/Hotel/Delete_Hotel/@item.HotelId?page=@Request.QueryString["page"]&filter=@Request.QueryString["filter"]" title="Delete" class="glyphicon glyphicon-trash actionButton"></a>
                            <a data-toggle="tooltip" href="/Admin/Hotel/HotelImages/@item.HotelId" title="AddImage" class="glyphicon glyphicon-picture"></a>
                        </td>
                    </tr>
            }

        </table>
    </div>
        if (Model.PageCount > 1)
        {
        <div class="col-sm-9">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
    new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
        LinkToNextPageFormat = "Next",
        LinkToPreviousPageFormat = "Previous",
        LinkToFirstPageFormat = "First",
        LinkToLastPageFormat = "Last",
        MaximumPageNumbersToDisplay = 10,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        EllipsesFormat = "&#8230;"
    },
    new AjaxOptions
    {
        HttpMethod = "GET",
        UpdateTargetId = "table_container",
        InsertionMode = InsertionMode.Replace
    }))
        </div>
        }
        <div class="col-sm-3 pager pull-right" style="font-size:12pt">
            Showing <span class="label label-info label-pill">@Model.FirstItemOnPage</span> to <span class="label label-info label-pill">@Model.LastItemOnPage</span>
            of <span class="label label-info label-pill">@Model.TotalItemCount</span> entries
        </div>

        }
        else
        {
        <div class="col-sm-12" style="margin-top:2%">
            <div class="well well-sm">
                This table is empty.
            </div>
        </div>
        }
