@using PagedList;
@using PagedList.Mvc;
@using HotelAdvice.ViewModels;
@model IPagedList<HotelSearchViewModel>


    
    @if (Model != null && Model.Count > 0)
    {
   
                  
    //Sort Buttons
    <div class="col-sm-12 nopadding">
        <div class="col-sm-3 well well-sort-title"><h4><i class="fa fa-sort fa-lg"></i> Sort Hotels By:</h4></div>
        <div class="col-sm-9 well well_sortResult">
 
            <div class="col-sm-2 ">
                @Ajax.ActionLink("Distance", "HotelResults", new { sort = "distance", page = Request["page"], city_id = Request["city_id"] }
                , new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "table_container",
                    InsertionMode = InsertionMode.Replace
                }, new { @class = "btn btn-sort", title = "Hotels located closest to Downtown",role="button" })
            </div>
            <div class="col-sm-3 col-sm-offset-1">
                @Ajax.ActionLink("Guest Rating", "HotelResults", new { sort = "rating", page = Request["page"], city_id = Request["city_id"] }
                , new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "table_container",
                    InsertionMode = InsertionMode.Replace
                }, new { @class = "btn btn-sort" })
            </div>

            <div class="col-sm-4 btn-group nopadding_left" style="margin-left:10px">
                <button type="button" class="btn btn-sort"><span class="selection">Stars</span></button>
                <button type="button" class="btn btn-sort dropdown-toggle" data-toggle="dropdown" style="width:30px">
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu-sort dropdown-menu" role="menu">
                    <li>
                        @Ajax.ActionLink("5 to 1 Stars", "HotelResults", new { sort = "5to1", page = Request["page"], city_id = Request["city_id"] }
                , new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "table_container",
                    InsertionMode = InsertionMode.Replace
                })
                    </li>
                    <li>
                        @Ajax.ActionLink("1 to 5 Stars", "HotelResults", new { sort = "1to5", page = Request["page"], city_id = Request["city_id"] }
                , new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "table_container",
                    InsertionMode = InsertionMode.Replace
                })
                    </li>
                </ul>
            </div>
        </div>
    </div>

        

    int count = Model.Count;
    for (int i = 0; i < count; i++)
    {
     
                <div class="col-sm-12 well well-result">
                    <div class="col-sm-3 nopadding" style="height:160px">
                        <a href="/SearchHotel/HotelDetails/@Model[i].HotelId" target="_blank">
                            <img src="~/Upload/@Model[i].HotelName/main.jpg" alt="Responsive image" onerror='this.onerror=null;this.src="../../Images/empty.gif"'
                                 class="img_result">
                        </a>
                    </div>
                    <div class="col-sm-9 nopadding">
                        <div class="col-sm-5">
                            <h4 style="font-weight:bold; margin:0">
                                @Html.ActionLink(Model[i].HotelName, "HotelDetails", "SearchHotel"
                            , new { id = Model[i].HotelId }, new { target = "_blank" })
                            </h4>
                            @Html.TextBox("txt_star_hotel", Model[i].HotelStars, new { @class = "HotelStars" })
                        </div>
                        <div class="col-sm-3 col-sm-offset-4 nopadding">
                            @using(Ajax.BeginForm("AddToFavoite", new { hotel_id = Model[i].HotelId }, new AjaxOptions
                            {
                            HttpMethod = "Post",
                            OnSuccess = "SuccessAjax_AddFavorit"
                            }))
                            {
                            @Html.AntiForgeryToken()

                            <button class="btn btn-danger col-sm-12 btn-outline" type="submit"><i class="fa fa-heart fa-lg"></i> Like it!</button>
                            }
                    

                            
                        </div>

                    </div>
                    <div class="col-sm-9">
                        visit website <i class="glyphicon glyphicon-hand-right"></i>
                        <a href="http://@Model[i].Website" target="_blank"> @Model[i].Website</a>
                    </div>
                    <div class="col-sm-9 top-buffer20">
                        @Model[i].Description
                    </div>
                    <div class="col-sm-9 top-buffer10">
                        <div class="col-sm-4 ">
                            @Html.TextBox("txt_rate_hotel", Model[i].GuestRating, new { @class = "GuestRating" })
                        </div>
                        <div class="col-sm-3 nopadding top-buffer10">
                            <a href="#">999 Reviews</a>
                        </div>
                        <div class="col-sm-3 col-sm-offset-2 nopadding">
                            <a role="button" class="btn btn-primary btn-review col-sm-12" href="/SearchHotel/AddReview/@Model[i].HotelId"
                               style="margin-left:10px">Write a Review<i class="glyphicon glyphicon-pencil"></i></a>
                        </div>
                    </div>

                </div>

    }
    }

    @if (Model.PageCount > 1)
    {
       
        <div class="col-sm-12 text-center">
            @Html.PagedListPager(Model, page => Url.Action("HotelResults"
             , new RouteValueDictionary(){ {"page", page}, {"sort" ,Request["sort"] }
               ,{"city_id",Request["city_id"]}
           })
   , PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
    new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
        LinkToFirstPageFormat = "First",
        LinkToLastPageFormat = "Last",
        MaximumPageNumbersToDisplay = 3,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        EllipsesFormat = "&#8230;"
    },
    new AjaxOptions
    {
        HttpMethod = "GET",
        UpdateTargetId = "table_container",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "Success_paging_Results"
    }))
        </div>
    }    
    else
    {
            <div class="col-sm-12" style="margin-top:2%">
                <div class="well well-sm well_noResult">
                    No Results Found.
                </div>
            </div>
    }

   
  




